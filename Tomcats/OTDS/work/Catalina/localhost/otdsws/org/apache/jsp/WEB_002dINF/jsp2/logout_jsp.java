/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.15
 * Generated at: 2019-07-18 11:14:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp2;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.opentext.otds.as.ASConstants;
import com.opentext.otds.as.ASConstants;

public final class logout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1549390092584L));
    _jspx_dependants.put("/WEB-INF/jsp2/bottom.jsp", Long.valueOf(1549390087943L));
    _jspx_dependants.put("jar:file:/C:/OpenText/OTDS16.4.2/otdsws/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425993070000L));
    _jspx_dependants.put("/WEB-INF/jsp2/logo.jsp", Long.valueOf(1549390088131L));
    _jspx_dependants.put("jar:file:/C:/OpenText/OTDS16.4.2/otdsws/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425993070000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.opentext.otds.as.ASConstants");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fparam;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fparam = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey.release();
    _005fjspx_005ftagPool_005ffmt_005fparam.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      com.opentext.otds.as.UserBean user = null;
      user = (com.opentext.otds.as.UserBean) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (user == null){
        user = new com.opentext.otds.as.UserBean();
        _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("user"), request);
      out.write('\r');
      out.write('\n');
      //  fmt:setLocale
      org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag _jspx_th_fmt_005fsetLocale_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag) _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag.class);
      boolean _jspx_th_fmt_005fsetLocale_005f0_reused = false;
      try {
        _jspx_th_fmt_005fsetLocale_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fsetLocale_005f0.setParent(null);
        // /WEB-INF/jsp2/logout.jsp(6,0) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fsetLocale_005f0.setValue(request.getAttribute(ASConstants.JSPLANG));
        int _jspx_eval_fmt_005fsetLocale_005f0 = _jspx_th_fmt_005fsetLocale_005f0.doStartTag();
        if (_jspx_th_fmt_005fsetLocale_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fsetLocale_005f0);
        _jspx_th_fmt_005fsetLocale_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fsetLocale_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fsetLocale_005f0_reused);
      }
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_fmt_005fsetBundle_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
String otds_build = (String)request.getAttribute(ASConstants.OTDS_BUILD);
      out.write("\r\n");
      out.write("\r\n");
 java.util.Map<String,String> logoutURLs = (java.util.Map<String,String>) request.getAttribute(ASConstants.PARAM_SLO_LOGOUT_URLS); 
      out.write('\r');
      out.write('\n');
 String sid = (String)request.getAttribute(ASConstants.PARAM_SLO_LOGOUT_SID); 
      out.write('\r');
      out.write('\n');
 String iss = (String)request.getAttribute(ASConstants.PARAM_SLO_LOGOUT_ISS); 
      out.write('\r');
      out.write('\n');
 int numLogoutURLs = logoutURLs == null ? 0 : logoutURLs.size(); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"");
      out.print(request.getAttribute(ASConstants.JSPLANG));
      out.write("\">\r\n");
      out.write("<head>\r\n");
      out.write("    <title>");
      if (_jspx_meth_fmt_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    \r\n");
      out.write("    <meta itemprop=\"otds-numLogoutURLs\" content=\"");
      out.print(numLogoutURLs);
      out.write("\">\r\n");
      out.write("    <meta itemprop=\"otds-nextURL\" content=\"");
      out.print(request.getAttribute(ASConstants.PARAM_SLO_REDIRECT_URI));
      out.write("\">\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./login2/bootstrap.min.css?v=");
      out.print(otds_build);
      out.write("\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./login2/theme.css?v=");
      out.print(otds_build);
      out.write("\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./login2/login2.css?v=");
      out.print(otds_build);
      out.write("\">\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"./app_directory_services.ico\">\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"jquery.min.js?v=");
      out.print(otds_build);
      out.write("\"></script>\r\n");
      out.write("    <script src=\"spin.min.js?v=");
      out.print(otds_build);
      out.write("\"></script>\r\n");
      out.write("    <script src=\"bootstrap.min.js?v=");
      out.print(otds_build);
      out.write("\"></script>\r\n");
      out.write("    <script src=\"./login2/login2_custom.js?v=");
      out.print(otds_build);
      out.write("\"></script>\r\n");
      out.write("    <script src=\"./login2/scripts.js?v=");
      out.print(otds_build);
      out.write("\"></script>\r\n");
      out.write("    <script src=\"./login2/logout.js?v=");
      out.print(otds_build);
      out.write("\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("    <div class=\"login-wrapper\" role=\"main\">\r\n");
      out.write("        <div class=\"login-container\">\r\n");
      out.write("          <div class=\"branding\">\r\n");
      out.write("            ");

String headerImg = String.valueOf(request.getAttribute(ASConstants.PARAM_OTDS_HEADER_STYLE));
if (!headerImg.matches(".+[.].+")) {
    headerImg+=".svg";
}
String headerImgSrc = "./login2/"+String.valueOf(org.apache.commons.lang3.StringEscapeUtils.escapeHtml3(headerImg));
String headerImgClass;
String[] oTImages = new String[]{
    "signin-ot.svg",
    "signin-otds.svg",
    "signin-cs.svg",
    "signin-ps.svg",
    "signin-otmm.svg",
    "signin-mft.svg",
    "signin-wsm.svg"};
if (java.util.Arrays.asList(oTImages).contains(headerImg)) {
    headerImgClass = "ot-logo";
} else {
    headerImgClass = "other-logo";
}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("            <img src=\"");
      out.print(headerImgSrc);
      out.write("\" id=\"ot-logo\" class=\"");
      out.print(headerImgClass);
      out.write("\" alt='");
      if (_jspx_meth_fmt_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("'>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          <div class=\"login-message\" role=\"alert\">\r\n");
      out.write("            <span>");
      if (_jspx_meth_fmt_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("</span>\r\n");
      out.write("            <span class=\"ellipsis\"></span>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          ");
 int i = 0; 
      out.write("\r\n");
      out.write("          ");
 if (logoutURLs != null) { 
      out.write("\r\n");
      out.write("          ");
 for (java.util.Map.Entry<String,String> logoutURLEntry : logoutURLs.entrySet()) { 
      out.write("\r\n");
      out.write("             ");
 
                String logoutURL = logoutURLEntry.getKey();
                String logoutMethod = logoutURLEntry.getValue();
                
                String logoutURLComplete = logoutURL;
                if (logoutURLComplete.contains("?")) {
                    logoutURLComplete += "&sid="+sid;
                } else {
                    logoutURLComplete += "?sid="+sid;
                }
                logoutURLComplete += "&iss="+java.net.URLEncoder.encode(iss, "UTF-8");
             
      out.write("\r\n");
      out.write("             \r\n");
      out.write("             ");
 if ("GET".equalsIgnoreCase(logoutMethod)) { 
      out.write("\r\n");
      out.write("                  <iframe id=\"");
      out.print("frame"+i);
      out.write("\" name=\"");
      out.print("frame"+i);
      out.write("\" data-src=\"");
      out.print(logoutURLComplete);
      out.write("\" style=\"visibility:hidden;width:0;height:0;border:0;border:none;\"></iframe>\r\n");
      out.write("             ");
 } else if ("POST".equalsIgnoreCase(logoutMethod)) { 
      out.write("\r\n");
      out.write("                  <form id=\"");
      out.print("form"+i);
      out.write("\" name=\"");
      out.print("form"+i);
      out.write("\" action=\"");
      out.print(logoutURL);
      out.write("\" method=\"post\" target=\"");
      out.print("frame"+i);
      out.write("\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"sid\" value=\"");
      out.print(sid);
      out.write("\"/>\r\n");
      out.write("                    <input type=\"hidden\" name=\"iss\" value=\"");
      out.print(iss);
      out.write("\"/>\r\n");
      out.write("                  </form>\r\n");
      out.write("                  <iframe id=\"");
      out.print("frame"+i);
      out.write("\" name=\"");
      out.print("frame"+i);
      out.write("\" style=\"visibility:hidden;width:0;height:0;border:0;border:none;\"></iframe>\r\n");
      out.write("             ");
 } else if ("DELETE".equalsIgnoreCase(logoutMethod)) { 
      out.write("\r\n");
      out.write("                  <link itemprop=\"deleteURL\" href=\"");
      out.print(logoutURLComplete);
      out.write("\">\r\n");
      out.write("             ");
 } 
      out.write("\r\n");
      out.write("             ");
 i++;
      out.write("\r\n");
      out.write("          ");
 } 
      out.write("\r\n");
      out.write("          ");
 } 
      out.write("\r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"push\">\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div role=\"contentinfo\">\r\n");
      out.write("    ");

    java.util.Map<String,String> langs=(java.util.Map<String,String>)request.getAttribute(ASConstants.LANGSMAP);
    
    if (request.getAttribute(ASConstants.OTDSLANG) == null) {
      request.setAttribute(ASConstants.OTDSLANG, "en");
    }
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"modal fade\" id=\"langModal\" role=\"dialog\" tabindex=\"-1\">\r\n");
      out.write("    <div class=\"modal-dialog modal-md\">\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t  <div class=\"langinstruction\" role=\"alert\">\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_fmt_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("          <div class=\"lang-block\">\r\n");
      out.write("          ");
 int langCount=0;
      out.write("\r\n");
      out.write("          ");
 for (java.util.Map.Entry<String,String> lang : langs.entrySet()) { 
      out.write("\r\n");
      out.write("                ");
 if (langCount > 0 && langCount % 8 == 0) { 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"lang-block\">\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("                ");
 langCount++; 
      out.write("\r\n");
      out.write("                <button class=\"lang-option\" name=\"");
      out.print(lang.getKey());
      out.write("\" lang=\"");
      out.print(lang.getKey());
      out.write("\" id=\"lang-");
      out.print(lang.getKey());
      out.write('"');
      out.write('>');
      out.print(lang.getValue());
      out.write("</button>\r\n");
      out.write("          ");
 } 
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("    ");
 if ("true".equals(request.getAttribute(ASConstants.SHOWLANGS))) { 
      out.write("\r\n");
      out.write("       <button class=\"language-icon\" id=\"lang-button\" data-toggle=\"modal\" data-target=\"#langModal\">");
      if (_jspx_meth_fmt_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("</button>\r\n");
      out.write("       &nbsp;\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    <span class=\"login-copyright\">\r\n");
      out.write("        <br>\r\n");
      out.write("        ");
      //  fmt:message
      org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
      boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
      try {
        _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fmessage_005f5.setParent(null);
        // /WEB-INF/jsp2/bottom.jsp(43,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fmessage_005f5.setKey("copyright");
        int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
        if (_jspx_eval_fmt_005fmessage_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_fmt_005fmessage_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fmessage_005f5);
          }
          do {
            out.write("\r\n");
            out.write("            ");
            //  fmt:param
            org.apache.taglibs.standard.tag.rt.fmt.ParamTag _jspx_th_fmt_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.ParamTag) _005fjspx_005ftagPool_005ffmt_005fparam.get(org.apache.taglibs.standard.tag.rt.fmt.ParamTag.class);
            boolean _jspx_th_fmt_005fparam_005f0_reused = false;
            try {
              _jspx_th_fmt_005fparam_005f0.setPageContext(_jspx_page_context);
              _jspx_th_fmt_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fmessage_005f5);
              int _jspx_eval_fmt_005fparam_005f0 = _jspx_th_fmt_005fparam_005f0.doStartTag();
              if (_jspx_eval_fmt_005fparam_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_fmt_005fparam_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fparam_005f0);
                }
                do {
                  out.print(String.valueOf(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR)));
                  int evalDoAfterBody = _jspx_th_fmt_005fparam_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_fmt_005fparam_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_fmt_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005ffmt_005fparam.reuse(_jspx_th_fmt_005fparam_005f0);
              _jspx_th_fmt_005fparam_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fparam_005f0_reused);
            }
            out.write("\r\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_fmt_005fmessage_005f5.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_fmt_005fmessage_005f5 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey.reuse(_jspx_th_fmt_005fmessage_005f5);
        _jspx_th_fmt_005fmessage_005f5_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
      }
      out.write("\r\n");
      out.write("    </span>\r\n");
      out.write("    </div>\r\n");
      out.write(" \r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fsetBundle_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:setBundle
    org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag _jspx_th_fmt_005fsetBundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag) _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag.class);
    boolean _jspx_th_fmt_005fsetBundle_005f0_reused = false;
    try {
      _jspx_th_fmt_005fsetBundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fsetBundle_005f0.setParent(null);
      // /WEB-INF/jsp2/logout.jsp(7,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fsetBundle_005f0.setBasename("login");
      int _jspx_eval_fmt_005fsetBundle_005f0 = _jspx_th_fmt_005fsetBundle_005f0.doStartTag();
      if (_jspx_th_fmt_005fsetBundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.reuse(_jspx_th_fmt_005fsetBundle_005f0);
      _jspx_th_fmt_005fsetBundle_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fsetBundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fsetBundle_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent(null);
      // /WEB-INF/jsp2/logout.jsp(18,11) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("page.title");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsp2/logout.jsp(44,87) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("opentext.logo");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent(null);
      // /WEB-INF/jsp2/logout.jsp(48,18) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("logging.out");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent(null);
      // /WEB-INF/jsp2/bottom.jsp(18,3) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("prompt.selectlanguage");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent(null);
      // /WEB-INF/jsp2/bottom.jsp(38,99) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("prompt.languages");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }
}
